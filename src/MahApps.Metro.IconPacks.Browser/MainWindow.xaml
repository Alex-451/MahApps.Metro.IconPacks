<controls:MetroWindow x:Class="MahApps.Metro.IconPacks.Browser.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:model="clr-namespace:MahApps.Metro.IconPacks.Browser.ViewModels"
                      xmlns:viewModels="clr-namespace:MahApps.Metro.IconPacks.Browser.ViewModels"
                      xmlns:virtualizing="clr-namespace:MahApps.Metro.IconPacks.Browser.Virtualizing"
                      Title="IconPacks Browser"
                      Width="1200"
                      Height="800"
                      MinWidth="600"
                      MinHeight="400"
                      d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
                      d:DesignHeight="400"
                      d:DesignWidth="600"
                      BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                      BorderThickness="1"
                      ResizeMode="CanResizeWithGrip"
                      TitleCharacterCasing="Normal"
                      WindowStartupLocation="CenterScreen"
                      WindowTransitionsEnabled="False"
                      mc:Ignorable="d">

    <controls:MetroWindow.Resources>
        <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.IconPacks.Browser;component/Styles/CustomTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="LinkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.WindowCommands}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Opacity" Value="1" />
            </Style>

            <Style x:Key="UnderlinedTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextDecorations" Value="Underline" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
        </ResourceDictionary>-->

        <DataTemplate x:Key="IconPacksBrowser.DataTemplates.HamburgerMenuItem" DataType="{x:Type model:IconPackViewModel}">
            <Grid Height="44">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=CompactPaneLength}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Width="40"
                        Height="30"
                        Background="{DynamicResource MahApps.Brushes.Highlight}"
                        CornerRadius="15">
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontFamily="Agency FB"
                               FontSize="16"
                               FontWeight="Bold"
                               Text="{Binding ShortName}" />
                </Border>

                <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Text="{Binding Caption}"
                           TextTrimming="CharacterEllipsis" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="IconPacksBrowser.DataTemplates.Content" DataType="{x:Type model:IconPackViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="48" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Background="{DynamicResource MahApps.HamburgerMenu.Pane.Background}">
                    <TextBlock Text="{Binding Caption}" FontSize="30" TextTrimming="CharacterEllipsis" FontWeight="Light" Foreground="White" />
                </Border>
                <ListBox x:Name="IconListBox"
                         Grid.Row="1"
                         Margin="2"
                         FocusVisualStyle="{x:Null}"
                         ItemsSource="{Binding Icons}"
                         SelectedValue="{Binding SelectedIcon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False, NotifyOnValidationError=False}"
                         Style="{DynamicResource MahApps.Styles.ListBox.Virtualized}"
                         Validation.ErrorTemplate="{x:Null}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <virtualizing:VirtualizingTilePanel ChildSize="128" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:IIconViewModel}">
                            <Grid x:Name="Root"
                                  Width="128"
                                  Height="128"
                                  Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentControl x:Name="IconContent"
                                                Grid.Row="0"
                                                Content="{Binding}"
                                                Focusable="False"
                                                IsTabStop="False" />
                                <Grid x:Name="Copy2ClipboardActions"
                                      Grid.Row="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      Focusable="False"
                                      Visibility="Collapsed">
                                    <Grid x:Name="Background" Opacity=".2">
                                        <Ellipse Width="22"
                                                 HorizontalAlignment="Left"
                                                 Fill="LightGray" />
                                        <Ellipse Width="22"
                                                 HorizontalAlignment="Right"
                                                 Fill="LightGray" />
                                        <Rectangle Margin="11,0" Fill="LightGray" />
                                    </Grid>
                                    <StackPanel Margin="11,0" Orientation="Horizontal">
                                        <Button Grid.Column="0"
                                                Width="22"
                                                Height="22"
                                                HorizontalAlignment="Center"
                                                BorderThickness="0"
                                                Command="{Binding CopyToClipboard}"
                                                CommandParameter="{Binding}"
                                                Focusable="False"
                                                Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                                IsTabStop="False"
                                                Style="{StaticResource CustomMetroCircleButtonStyle}">
                                            <Button.ToolTip>
                                                <TextBlock Text="{Binding Value, StringFormat='{}Copy {0} to clipboard as element'}" />
                                            </Button.ToolTip>
                                            <StackPanel Orientation="Horizontal">
                                                <iconPacks:PackIconMaterial Width="7"
                                                                            Margin="1,0"
                                                                            Kind="ChevronLeft" />
                                                <iconPacks:PackIconMaterial Width="7"
                                                                            Margin="1,0"
                                                                            Kind="ChevronRight" />
                                            </StackPanel>
                                        </Button>
                                        <Button Grid.Column="1"
                                                Width="22"
                                                Height="22"
                                                BorderThickness="0"
                                                Command="{Binding CopyToClipboardAsContent}"
                                                CommandParameter="{Binding}"
                                                Focusable="False"
                                                Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                                IsTabStop="False"
                                                Style="{StaticResource CustomMetroCircleButtonStyle}">
                                            <Button.ToolTip>
                                                <TextBlock Text="{Binding Value, StringFormat='{}Copy {0} to clipboard as content'}" />
                                            </Button.ToolTip>
                                            <iconPacks:PackIconMaterial Width="14"
                                                                        Height="14"
                                                                        Kind="CodeBraces" />
                                        </Button>
                                        <Button Grid.Column="1"
                                                Width="22"
                                                Height="22"
                                                BorderThickness="0"
                                                Command="{Binding CopyToClipboardAsPathIcon}"
                                                CommandParameter="{Binding}"
                                                Focusable="False"
                                                Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                                IsTabStop="False"
                                                Style="{StaticResource CustomMetroCircleButtonStyle}">
                                            <Button.ToolTip>
                                                <TextBlock Text="{Binding Value, StringFormat='{}Copy {0} to clipboard as PathIcon element'}" />
                                            </Button.ToolTip>
                                            <iconPacks:PackIconFontAwesome Width="14"
                                                                           Height="14"
                                                                           Kind="DrawPolygonSolid" />
                                        </Button>
                                        <Button Width="22"
                                                Height="22"
                                                BorderThickness="0"
                                                Command="{Binding CopyToClipboardAsGeometry}"
                                                CommandParameter="{Binding}"
                                                Focusable="False"
                                                Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=Foreground}"
                                                IsTabStop="False"
                                                Style="{StaticResource CustomMetroCircleButtonStyle}">
                                            <Button.ToolTip>
                                                <TextBlock Text="{Binding Value, StringFormat='{}Copy {0} to clipboard as Geometry'}" />
                                            </Button.ToolTip>
                                            <iconPacks:PackIconMaterial Width="14"
                                                                        Height="14"
                                                                        Kind="Draw" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                                <TextBlock Grid.Row="1"
                                           Margin="2"
                                           HorizontalAlignment="Center"
                                           Text="{Binding Name, Mode=OneWay}"
                                           TextTrimming="CharacterEllipsis" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                    <Setter TargetName="Copy2ClipboardActions" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconMaterialKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconMaterial Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconMaterialDesignKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconMaterialDesign Width="32"
                                                                                  Height="32"
                                                                                  HorizontalAlignment="Center"
                                                                                  VerticalAlignment="Center"
                                                                                  Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconMaterialLightKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconMaterialLight Width="32"
                                                                                 Height="32"
                                                                                 HorizontalAlignment="Center"
                                                                                 VerticalAlignment="Center"
                                                                                 Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconFontAwesomeKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconFontAwesome Width="32"
                                                                               Height="32"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center"
                                                                               Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconOcticonsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconOcticons Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconPicolIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconPicolIcons Width="32"
                                                                              Height="32"
                                                                              HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconRPGAwesomeKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconRPGAwesome Width="32"
                                                                              Height="32"
                                                                              HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center"
                                                                              Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconMicronsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconMicrons Width="32"
                                                                           Height="32"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconModernKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconModern Width="32"
                                                                          Height="32"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconEntypoKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconEntypo Width="32"
                                                                          Height="32"
                                                                          HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center"
                                                                          Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconSimpleIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconSimpleIcons Width="32"
                                                                               Height="32"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center"
                                                                               Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconWeatherIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconWeatherIcons Width="32"
                                                                                Height="32"
                                                                                HorizontalAlignment="Center"
                                                                                VerticalAlignment="Center"
                                                                                Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconTypiconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconTypicons Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconFeatherIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconFeatherIcons Width="32"
                                                                                Height="32"
                                                                                HorizontalAlignment="Center"
                                                                                VerticalAlignment="Center"
                                                                                Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconIoniconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconIonicons Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconJamIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconJamIcons Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconEvaIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconEvaIcons Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconBoxIconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconBoxIcons Width="32"
                                                                            Height="32"
                                                                            HorizontalAlignment="Center"
                                                                            VerticalAlignment="Center"
                                                                            Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconUniconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconUnicons Width="32"
                                                                           Height="32"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IconType}" Value="{x:Type iconPacks:PackIconZondiconsKind}">
                                    <Setter TargetName="IconContent" Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate DataType="{x:Type viewModels:IIconViewModel}">
                                                <iconPacks:PackIconZondicons Width="32"
                                                                             Height="32"
                                                                             HorizontalAlignment="Center"
                                                                             VerticalAlignment="Center"
                                                                             Kind="{Binding Value, Mode=OneWay}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </DataTemplate>

    </controls:MetroWindow.Resources>

    <controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Viewbox Stretch="Uniform" Margin="4">
                <Canvas Width="31.828093" Height="35.996996">
                    <Canvas.RenderTransform>
                        <TranslateTransform X="-33.222857" Y="-125.54317"/>
                    </Canvas.RenderTransform>
                    <Path Fill="{DynamicResource MahApps.Brushes.IdealForeground}">
                        <Path.Data>
                            <PathGeometry Figures="m 63.728035 151.87945 -0.0325 0.0163 0.03096 0.01 -1.665925 5.8104 h -5.836454 l -1.665925 -5.8104 0.03096 -0.01 -0.03262 -0.0163 4.157493 -8.33778 h 0.01182 v 7.36721 c -0.485291 0.17099 -0.833784 0.6351 -0.833784 1.17902 0 0.69047 0.560201 1.25066 1.250664 1.25066 0.690475 0 1.250676 -0.56019 1.250676 -1.25066 0 -0.54392 -0.348493 -1.00803 -0.833784 -1.17902 v -7.36721 h 0.01182 z m -7.50401 6.67024 h 5.836452 v 1.66756 h -5.836452 z m -19.176915 1.66756 c -1.380946 0 -2.501336 -1.12039 -2.501336 -2.50134 v -19.17692 c 0 -3.68361 2.986621 -6.67023 6.670232 -6.67023 v -1.66756 c 0 -1.8418 1.493309 -3.33511 3.335112 -3.33511 h 6.670238 c 1.841803 0 3.335112 1.49331 3.335112 3.33511 v 1.66756 c 3.683607 0 6.670225 2.98662 6.670225 6.67023 v 4.61673 l -0.625325 -1.28162 h -2.918233 l -3.253691 6.67024 H 36.213332 v 1.66756 h 5.002674 v 3.33511 h 1.667556 v -3.33511 h 10.733274 l -0.801203 1.64476 2.157727 7.5268 v 0.83379 z m 15.841802 -28.34849 v -1.66756 c 0 -0.92171 -0.745839 -1.66755 -1.667556 -1.66755 h -6.670238 c -0.921716 0 -1.667556 0.74584 -1.667556 1.66755 v 1.66756 z m -6.129582 7.50401 c -0.33709 -0.003 -0.613935 0.0717 -0.613935 0.0717 -1.322324 0.26219 -2.073044 1.87438 -2.770031 1.79621 -0.48529 0 -1.309302 -1.03245 -1.325586 -0.89241 -0.01631 0.14168 0.114037 3.63151 2.377578 3.78784 1.941139 0.15633 3.445852 -2.01117 3.445852 -2.01117 l 0.02446 0.0212 c 0 0 1.504713 2.16588 3.445853 2.00954 2.263588 -0.15633 2.393862 -3.64453 2.377577 -3.78621 -0.01631 -0.14004 -0.841926 0.89241 -1.327205 0.89241 -0.695367 0.0782 -1.446087 -1.53402 -2.768412 -1.79621 0 0 -0.586246 -0.15959 -1.091071 -0.003 -0.193793 0.0798 -0.415261 0.14331 -0.622077 0.2915 l -0.013 0.0115 -0.04077 -0.0309 c -0.206813 -0.14982 -0.428281 -0.21171 -0.622074 -0.29313 z m 0 0" FillRule="NonZero"/>
                        </Path.Data>
                    </Path>
            <Viewbox Margin="5" Stretch="Uniform">
                <Canvas Width="31.828093" Height="35.996996">
                    <Canvas Name="layer1">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="-33.222857" Y="-125.54317" />
                        </Canvas.RenderTransform>
                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="#FFFFFFFF">
                            <Path.Data>
                                <PathGeometry Figures="m 63.728035 151.87945 -0.0325 0.0163 0.03096 0.01 -1.665925 5.8104 h -5.836454 l -1.665925 -5.8104 0.03096 -0.01 -0.03262 -0.0163 4.157493 -8.33778 h 0.01182 v 7.36721 c -0.485291 0.17099 -0.833784 0.6351 -0.833784 1.17902 0 0.69047 0.560201 1.25066 1.250664 1.25066 0.690475 0 1.250676 -0.56019 1.250676 -1.25066 0 -0.54392 -0.348493 -1.00803 -0.833784 -1.17902 v -7.36721 h 0.01182 z m -7.50401 6.67024 h 5.836452 v 1.66756 h -5.836452 z m -19.176915 1.66756 c -1.380946 0 -2.501336 -1.12039 -2.501336 -2.50134 v -19.17692 c 0 -3.68361 2.986621 -6.67023 6.670232 -6.67023 v -1.66756 c 0 -1.8418 1.493309 -3.33511 3.335112 -3.33511 h 6.670238 c 1.841803 0 3.335112 1.49331 3.335112 3.33511 v 1.66756 c 3.683607 0 6.670225 2.98662 6.670225 6.67023 v 4.61673 l -0.625325 -1.28162 h -2.918233 l -3.253691 6.67024 H 36.213332 v 1.66756 h 5.002674 v 3.33511 h 1.667556 v -3.33511 h 10.733274 l -0.801203 1.64476 2.157727 7.5268 v 0.83379 z m 15.841802 -28.34849 v -1.66756 c 0 -0.92171 -0.745839 -1.66755 -1.667556 -1.66755 h -6.670238 c -0.921716 0 -1.667556 0.74584 -1.667556 1.66755 v 1.66756 z m -6.129582 7.50401 c -0.33709 -0.003 -0.613935 0.0717 -0.613935 0.0717 -1.322324 0.26219 -2.073044 1.87438 -2.770031 1.79621 -0.48529 0 -1.309302 -1.03245 -1.325586 -0.89241 -0.01631 0.14168 0.114037 3.63151 2.377578 3.78784 1.941139 0.15633 3.445852 -2.01117 3.445852 -2.01117 l 0.02446 0.0212 c 0 0 1.504713 2.16588 3.445853 2.00954 2.263588 -0.15633 2.393862 -3.64453 2.377577 -3.78621 -0.01631 -0.14004 -0.841926 0.89241 -1.327205 0.89241 -0.695367 0.0782 -1.446087 -1.53402 -2.768412 -1.79621 0 0 -0.586246 -0.15959 -1.091071 -0.003 -0.193793 0.0798 -0.415261 0.14331 -0.622077 0.2915 l -0.013 0.0115 -0.04077 -0.0309 c -0.206813 -0.14982 -0.428281 -0.21171 -0.622074 -0.29313 z m 0 0" FillRule="NonZero" />
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Canvas>
            </Viewbox>
        </DataTemplate>
    </controls:MetroWindow.IconTemplate>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Command="{x:Static viewModels:MainViewModel.OpenUrlCommand}"
                    CommandParameter="https://github.com/MahApps/MahApps.Metro.IconPacks"
                    Content="{iconPacks:Modern SocialGithubOctocat, Width=22, Height=22}"
            <Button Command="{Binding GoToGitHubCommand}"
                    Content="{iconPacks:Modern SocialGithubOctocat,
                                               Width=22,
                                               Height=22}"
                    ToolTip="IconPacks.Browser on GitHub" />
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <TabControl x:Name="IconPacksTabControl"
                    Grid.Row="0"
                    DisplayMemberPath="Caption"
                    ItemsSource="{Binding IconPacks, Mode=OneWay}"
                    Style="{StaticResource CustomTabControlStyle}" />
        
        <StatusBar Grid.Row="1" MinHeight="24">
        <!--<TabControl x:Name="IconPacksTabControl"
                    Grid.Row="0"
                    DisplayMemberPath="Caption"
                    ItemsSource="{Binding IconPacks, Mode=OneWay}"
                    Style="{StaticResource CustomTabControlStyle}" />-->

        <controls:HamburgerMenu Grid.Row="0"
                                CanResizeOpenPane="True"
                                Content="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectedItem}"
                                ContentTemplate="{StaticResource IconPacksBrowser.DataTemplates.Content}"
                                IsPaneOpen="True"
                                ItemTemplate="{StaticResource IconPacksBrowser.DataTemplates.HamburgerMenuItem}"
                                ItemsSource="{Binding IconPacks, Mode=OneWay}">
            <controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <TextBox x:Name="FilterTextBox"
                             Width="250"
                             Margin="10,0,10,5"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             controls:TextBoxHelper.ClearTextButton="True"
                             controls:TextBoxHelper.UseFloatingWatermark="True"
                             controls:TextBoxHelper.Watermark="Filter by..."
                             Background="#2000"
                             BorderThickness="0,0,0,0"
                             DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:MetroWindow}, Path=DataContext}"
                             Foreground="White"
                             SnapsToDevicePixels="True"
                             Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                </DataTemplate>
            </controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
        </controls:HamburgerMenu>

        <StatusBar Grid.Row="1">
            <!-- <StatusBarItem Content="{Binding AppVersion, Mode=OneWay}" ContentStringFormat="{}Browser v{0}" /> -->
            <!-- <Separator Style="{DynamicResource MahApps.Styles.Separator.StatusBar}" /> -->
            <StatusBarItem Content="{Binding IconPacksVersion, Mode=OneWay}" ContentStringFormat="{}IconPacks v{0}" />
            
            <Separator Style="{DynamicResource MahApps.Styles.Separator.StatusBar}" />
            
            <StatusBarItem Content="{Binding ElementName=IconPacksTabControl, Path=SelectedItem, Mode=OneWay}">
                <StatusBarItem.ContentTemplate>
                    <DataTemplate DataType="{x:Type viewModels:IconPackViewModel}">
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} with {1} icons">
                                    <Binding Mode="OneWay" Path="Caption" />
                                    <Binding Mode="OneWay" Path="IconCount" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </StatusBarItem.ContentTemplate>
            </StatusBarItem>
            
            <Separator Style="{DynamicResource MahApps.Styles.Separator.StatusBar}" />
            
            <StatusBarItem Content="{Binding ElementName=IconPacksTabControl, Path=SelectedItem, Mode=OneWay}">
                <StatusBarItem.ContentTemplate>
                    <DataTemplate DataType="{x:Type viewModels:IconPackViewModel}">
                        <Button Margin="0 0 4 0"
                                VerticalAlignment="Center"
                                Command="{x:Static viewModels:MainViewModel.OpenUrlCommand}"
                                CommandParameter="{Binding ProjectUrl}"
                                Style="{StaticResource LinkButtonStyle}">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconOcticons Kind="LinkExternal" Width="14" Height="14" VerticalAlignment="Center" Margin="0 0 4 0" />
                                        <TextBlock Text="Project site" VerticalAlignment="Center" Style="{StaticResource UnderlinedTextBlockStyle}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                            <Button.ToolTip>
                                <TextBlock Text="{Binding ProjectUrl, StringFormat='{}Visit: {0}'}" />
                            </Button.ToolTip>
                        </Button>
                    </DataTemplate>
                </StatusBarItem.ContentTemplate>
            </StatusBarItem>

            <Separator Style="{DynamicResource MahApps.Styles.Separator.StatusBar}" />
            
            <StatusBarItem Content="{Binding ElementName=IconPacksTabControl, Path=SelectedItem, Mode=OneWay}">
                <StatusBarItem.ContentTemplate>
                    <DataTemplate DataType="{x:Type viewModels:IconPackViewModel}">
                        <Button Margin="0 0 4 0"
                                VerticalAlignment="Center"
                                Command="{x:Static viewModels:MainViewModel.OpenUrlCommand}"
                                CommandParameter="{Binding LicenseUrl}"
                                Style="{StaticResource LinkButtonStyle}">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconOcticons Kind="Law" Width="14" Height="14" VerticalAlignment="Center" Margin="0 0 4 0" />
                                        <TextBlock Text="License" VerticalAlignment="Center" Style="{StaticResource UnderlinedTextBlockStyle}" />
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                            <Button.ToolTip>
                                <TextBlock Text="{Binding LicenseUrl, StringFormat='{}License: {0}'}" />
                            </Button.ToolTip>
                        </Button>
                    </DataTemplate>
                </StatusBarItem.ContentTemplate>
            </StatusBarItem>
        </StatusBar>
    </Grid>

</controls:MetroWindow>